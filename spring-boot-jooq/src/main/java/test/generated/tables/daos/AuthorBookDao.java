/*
 * This file is generated by jOOQ.
 */
package test.generated.tables.daos;


import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;

import test.generated.tables.AuthorBook;
import test.generated.tables.records.AuthorBookRecord;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorBookDao extends DAOImpl<AuthorBookRecord, test.generated.tables.pojos.AuthorBook, Record2<Integer, Integer>> {

    /**
     * Create a new AuthorBookDao without any configuration
     */
    public AuthorBookDao() {
        super(AuthorBook.AUTHOR_BOOK, test.generated.tables.pojos.AuthorBook.class);
    }

    /**
     * Create a new AuthorBookDao with an attached configuration
     */
    public AuthorBookDao(Configuration configuration) {
        super(AuthorBook.AUTHOR_BOOK, test.generated.tables.pojos.AuthorBook.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<Integer, Integer> getId(test.generated.tables.pojos.AuthorBook object) {
        return compositeKeyRecord(object.getAuthorId(), object.getBookId());
    }

    /**
     * Fetch records that have <code>author_id IN (values)</code>
     */
    public List<test.generated.tables.pojos.AuthorBook> fetchByAuthorId(Integer... values) {
        return fetch(AuthorBook.AUTHOR_BOOK.AUTHOR_ID, values);
    }

    /**
     * Fetch records that have <code>book_id IN (values)</code>
     */
    public List<test.generated.tables.pojos.AuthorBook> fetchByBookId(Integer... values) {
        return fetch(AuthorBook.AUTHOR_BOOK.BOOK_ID, values);
    }
}
